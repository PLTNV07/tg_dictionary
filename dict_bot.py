# В google colab добавить: !pip install pyTelegramBotAPI
# Чтобы добавить новое слово — нужно его прописать в объект DEFINITOINS на 13 строчке
# Важно все новые аббривиатуры в коде писать только с маленьких букв
# Пользователь в телеграм может писать и с большой и с маленькой — код всегда приводит к строчным

from telebot import TeleBot, types

bot = TeleBot(token='6832909531:AAEnEG_19pREbU-Xm4u9T-VaPV-MqBcJw5o', parse_mode='html') # создание бота

# словарь с определениями и аббревиатурами, которые знает бот
# в формате:
# 'ключевая фраза': 'соответствующее ей определение'
DEFINITOINS = {
    'регресс': 'Проверить, что новый функционал не сломал существующий',
    'хинт': 'Всплывающая подсказка при наведении на иконку на сайте или в случае недопустимого действия',
    'кса': 'Один из вариантов устройства современных цифровых продуктов, в котором мы делим продукт на три части: клиент, сервер и база данных',
    'квери': 'Это часть урла, в которой можно передать с клиента на бэкэнд дополнительную информацию',
    'соап': 'Формат обмена сообщениями, ограничивает структуру сообщений на верхнем уровне, пример реализации – XML поверх SOAP через HTTP',
    'драгендроп': 'Drag-and-drop (в переводе с англ. — «тащи-и-бросай», «бери-и-брось») — способ оперирования элементами интерфейса в интерфейсах пользователя',
    'апдейт': '(англ. "update") — обновление, изменение данных или программного обеспечения. Пример употребления: "Сейчас мы работаем над апдейтом системы для улучшения её производительности". Аналог на русском — “обновление”.',
    'апишка': '(c англ. "API") — это интерфейс программирования приложений, который используется для взаимодействия между различными приложениями или сервисами. Пример употребления: "Мы используем апишку Google Maps, чтобы интегрировать карты в наше приложение".',
    'апрув': '(англ. “approve”) — одобрение или подтверждение. Пример употребления: Я должен получить апрув от менеджера, прежде чем выпустить новую версию приложения”. Аналог на русском — ”подтверждение”.',
    'артефакт': 'результат работы программиста, например, скомпилированный файл, собранный пакет, документация или другие материалы. Пример употребления: "На сервере оказался ненужный артефакт, который занимал слишком много места". Аналог на русском — “результат работы”.',
    'дейли': '(англ. “daily meeting”) — ежедневное совещание команды разработки, на котором обсуждаются проделанная работа, планы на день и задачи. Пример употребления: На дейли мы обсудили текущие задачи и взаимодействие между разными отделами проекта. Аналог на русском — “ежедневный отчет”',
    'деплой': '(англ. “deploy”) — это процесс размещения кода или приложения на сервере или другой инфраструктуре, где он может быть использован. Пример употребления: “Сегодня мы будем делать деплой новой версии приложения на сервере”. Аналог на русском — “размещение”.',
    'дроп': '(англ. “drop”) — удаление, отмена чего-либо. Пример употребления: “Я случайно дропнул все изменения в ветке разработки”. Аналог на русском — “удалить”.',
    'коммит': '(англ. “commit”) — действие по сохранению изменений в репозитории, чтобы они стали частью проекта. Пример употребления: “Я закоммитил изменения в коде, чтобы они стали доступны другим разработчикам.” Аналог на русском — “сохранить изменения”.',
    'грумминг': '(англ. “grooming”) — процесс поддержки и оптимизации кода. Пример употребления: “Мы проводим еженедельный груминг, чтобы поддерживать наш код в хорошем состоянии.” Аналог на русском — “оптимизация”.',
    'бэклог': '(англ. “backlog”) — это список задач или проектов, которые нужно выполнить в будущем. Пример употребления: "Мы добавили новую задачу в бэклог и займёмся ей после того, как закончим текущие проекты". Аналог на русском — “список задач”.',
    'валидация': '(англ. "validation") — процесс проверки правильности и соответствия данных определённым требованиям. Пример употребления: "Нужно добавить валидацию поля ввода, чтобы пользователь не мог указывать некорректные данные". Аналог на русском — “проверка”.',
    'дебаг': '(англ. "debug") — процесс поиска и исправления ошибок в программном коде. Пример употребления: "Я провожу дебаг программы, чтобы исправить все ошибки перед тем, как выкатить релиз". Аналог на русском — “исправлять ошибки”.',
    'девопс': '(англ. “devops”) — это методология, объединяющая разработку (dev) и операции (ops) с целью улучшения совместной работы команды и оптимизации процессов разработки и эксплуатации ПО. Пример употребления: "Наша девопс команда обеспечивает автоматизацию инфраструктуры, быструю выкатку билдов и быстрое реагирование на проблемы в продакшн-среде."',
    'легаси': 'Легаси код (англ. “legacy code”) — устаревший код, который не соответствует современным стандартам. Пример употребления: “Мы должны переписать этот легаси код, чтобы наше приложение стало более эффективным”. Аналог на русском — “устаревший код”.',
    'логи': '(англ. “log”) — это записи о том, что происходит в приложении или на сайте, которые помогают выявить ошибки и проблемы. Пример употребления: “Если у тебя возникли проблемы с приложением, присылай логи разработчикам, чтобы они могли их проанализировать.” Аналог на русском — “записи”.',
    'мержить': '(англ. “merge”) — процесс объединения изменений из разных веток разработки в одну основную ветку. Пример употребления: “Я собираюсь мержить свои изменения в основную ветку разработки”. Аналог на русском — “объединять”.',
    'мокать': '(англ. “mock”) — означает создание имитации компонентов или функций, чтобы проверить работоспособность других частей программы. Это делается, когда необходимо протестировать код, но реальные компоненты ещё не готовы или недоступны. Пример употребления: “Если программа взаимодействует с веб-сервисом, но этот сервис ещё не разработан или недоступен, то можно замокать его.” Аналог на русском — “имитировать”.',
    'монолит': 'Программная архитектура, где весь код приложения находится в одном большом модуле или монолите. Такой подход может приводить к трудностям в поддержке, масштабировании и расширении приложения. Пример употребления: "Наша старая система была построена на монолите, и мы тратили много времени на обновления и деплойменты.”',
    'онбординг': '(англ. “onboarding”) — это процесс введения новых сотрудников в компанию и ознакомления их с её культурой и процессами. Пример употребления: "Мы улучшили процесс онбординга, чтобы новые сотрудники быстрее вливались в коллектив". Аналог на русском — “адаптация”, “вводный курс”',
    'парсить': '(англ. “parse”) — преобразовывать данные из одного формата в другой, обычно в компьютерном контексте. Пример употребления: “Мы парсим данные из формата CSV в формат JSON для обработки в нашей системе”. Аналог на русском — “преобразовывать”.',
    'пинг': '(англ. “ping”) — измерение времени, за которое данные отправляются и возвращаются от устройства или сервера в сети. Пример употребления: “Я попробую пингануть наш сервер, чтобы узнать, как долго он отвечает.” Аналог на русском — “проверка связи”.',
    'прод': '(англ. “production”) — сокращённое слово от "продакшн", означающее окружение реальной работы, в отличие от окружения разработки или тестирования. Пример употребления: "Новый билд прошёл все тесты и готов к выкатке в прод". Аналог на русском — “рабочая среда”, “рабочее окружение”.',
    'пуш': '(англ. “push”) — отправка изменений в удалённый репозиторий. Пример употребления: "Я внёс несколько изменений в код и готов сделать пуш." Аналог на русском — “отправить”, “загрузить изменения”.',
    'ретро': '(англ. “retrospective”) — это совместное обсуждение прошлых достижений и неудач в проекте с целью извлечения уроков и оптимизации процессов. Пример употребления: "Мы планируем провести ретро после окончания этой фазы проекта." Аналог на русском — “анализ проделанной работы”.',
    'тегнуть': '(англ. "tag") — присвоить тег (метку) объекту для более удобного поиска или классификации. Пример употребления: "Тегните этот баг #1234 меткой ВАЖНЫЙ". Также может использоваться в значении упоминания кого-либо в чате. Например, “Тегни меня, когда я понадоблюсь”. Аналог на русском — “отметить”.',
    'топик': '(англ. “topic”) — используется для обозначения темы, которая обсуждается на форуме, в чате или в другом онлайн-сообществе. Также этот термин может использоваться для обозначения конкретного сообщения или поста в рамках обсуждаемой темы. Пример употребления: “Я создал новый топик на форуме и спросил, как работать с этой с библиотекой. Жду, когда кто-то ответит на мой вопрос”. Аналог на русском — “тема”.',
    'фича': '(англ. “feature”) — функция или возможность, которую предоставляет продукт или сервис. Пример употребления: “Мы добавили новую фичу в наше приложение, которая позволяет пользователям отправлять сообщения друг другу.” Аналог на русском — “особенность”, “функция”.',
    'хотфикс': '(англ. “hotfix”) — это небольшое изменение в программном коде, которое вносится для решения конкретной проблемы без перекомпиляции всего приложения. Пример употребления: "Мы внедрили хотфикс для устранения ошибки в работе приложения”. Аналог на русском — “небольшое изменение”.',
    'трек': '(англ. “track”) — это система отслеживания ошибок, задач и прогресса в проекте. Пример употребления: "Я добавил новую задачу в трек проекта". Аналог на русском — “система отслеживания”.',
    'рест': '(Representation state transfer) Создан Роем Филдингом: Архитектурный стиль, ориентирован на использование HTTP в качестве транспортного протокола, пример реализации – JSON через HTTP.',
    'куки': 'Это небольшие текстовые файлы, которые сайты сохраняют на вашем компьютере или мобильном устройстве, когда вы их посещаете. Они широко используются для того, чтобы сайты могли работать более эффективно, а также для предоставления информации владельцам сайтов.',
}

# обработчик команды '/start'
@bot.message_handler(commands=['start'])
def start_command_handler(message: types.Message):
    # отправляем ответ на команду '/start'
    bot.send_message(
        chat_id=message.chat.id, # id чата, в который необходимо направить сообщение
        text='Привет! Я помогу тебе расшифровать сложные аббревиатуры и термины 🤓\nВведи интересующий термин, например, хинт', # текст сообщения
    )

# обработчик всех остальных сообщений
@bot.message_handler()
def message_handler(message: types.Message):
    # пробуем найти ключевую фразу в словаре
    definition = DEFINITOINS.get(
        message.text.lower(), # приводим текст сообщения к нижнему регистру
    )
    # если фразы нет в словаре, то переменная definition будет иметь значение None
    # проверяем это условие
    if definition is None:
        # если ключевая фраза не была найдена в словаре
        # отправляем ответ
        bot.send_message(
            chat_id=message.chat.id,
            text='😋 Я пока не знаю такого определения',
        )
        # выходим из функции
        return
    
    # если ключевая фраза была найдена, формируем текст сообщения и отправляем его
    # если перед строкой поставить букву f, то в фигурных скобках {} можно использовать переменные :)
    bot.send_message(
        chat_id=message.chat.id,
        text=f'Определение:\n<code>{definition}</code>',
    )

    bot.send_message(
        chat_id=message.chat.id,
        text=f'Жду следующий термин',
    )


# главная функция программы
def main():
    # запускаем нашего бота
    bot.infinity_polling()


if __name__ == '__main__':
    main()
